`include "config.svh"

module mem_inst #(
    parameter B_WIDTH = 32;
    parameter MEM_SIZE = 32;
) (
    input                   clk, rst;
    input  [B_WIDTH-1:0]    pc;
    output [31:0]           inst;
);

    logic [2**MEM_SIZE-1:0][B_WIDTH-1:0] inst_array;

    `ifdef INST_PKG
        import inst_pkg::*; // use "mem_inst_pkg.svh" generated by tool(hex to verilog package)
    `elsif INST_HEX
        initial $readmemh(`INST_HEX, inst_array, 'h0);
    `endif

    always_comb begin : inst_fetch
        // if (pc[31:28] == 4'h8) begin
        //     inst <= 'hx;
        // end else begin
        //     inst <= inst_array[pc];
        // end
        inst <= (pc[31:28] == 4'h8) ? inst_array[pc] : 'hz; // 32'h80000000-8fffffff is used for RAM in common RISC-V Processor

    end


endmodule
